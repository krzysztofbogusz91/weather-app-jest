// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Current renders without crashing 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Current
    cords={Object {}}
    fetchForecast={[Function]}
    fetchUser={[Function]}
    fetchWeather={[Function]}
    today={Object {}}
    weather={Object {}}
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <form
          action="submit "
>
          <input
                    className="search-fetch form-control"
                    onChange={[Function]}
                    type="text"
                    value=""
          />
</form>,
        <div
          className="current-weather"
>
          <Unknown
                    table={Object {}}
                    type="today"
          />
          <Unknown
                    table={Object {}}
                    type="forecast"
          />
</div>,
      ],
      "className": "mt-5",
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "action": "submit ",
          "children": <input
            className="search-fetch form-control"
            onChange={[Function]}
            type="text"
            value=""
/>,
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "search-fetch form-control",
            "onChange": [Function],
            "type": "text",
            "value": "",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        "type": "form",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <Unknown
              table={Object {}}
              type="today"
/>,
            <Unknown
              table={Object {}}
              type="forecast"
/>,
          ],
          "className": "current-weather",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "table": Object {},
              "type": "today",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "function",
            "props": Object {
              "table": Object {},
              "type": "forecast",
            },
            "ref": null,
            "rendered": null,
            "type": [Function],
          },
        ],
        "type": "div",
      },
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <form
            action="submit "
>
            <input
                        className="search-fetch form-control"
                        onChange={[Function]}
                        type="text"
                        value=""
            />
</form>,
          <div
            className="current-weather"
>
            <Unknown
                        table={Object {}}
                        type="today"
            />
            <Unknown
                        table={Object {}}
                        type="forecast"
            />
</div>,
        ],
        "className": "mt-5",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "action": "submit ",
            "children": <input
              className="search-fetch form-control"
              onChange={[Function]}
              type="text"
              value=""
/>,
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "search-fetch form-control",
              "onChange": [Function],
              "type": "text",
              "value": "",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          "type": "form",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <Unknown
                table={Object {}}
                type="today"
/>,
              <Unknown
                table={Object {}}
                type="forecast"
/>,
            ],
            "className": "current-weather",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "table": Object {},
                "type": "today",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "function",
              "props": Object {
                "table": Object {},
                "type": "forecast",
              },
              "ref": null,
              "rendered": null,
              "type": [Function],
            },
          ],
          "type": "div",
        },
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
  },
}
`;
